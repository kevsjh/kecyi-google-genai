import { cn } from "@/lib/utils";
import React from "react";

type IconProps = React.HTMLAttributes<SVGElement>;


export const Icons = {
    Logo: (props: IconProps) => (
        <svg
            viewBox="0 0 410 425"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            {...props}
        >
            <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M82.8367 221.713C82.8367 145.578 123 79.4821 203.327 79.4821C285.327 79.4821 327.163 145.578 327.163 222.55V310H410V212.51C410 93.7052 337.204 0 203.327 0C71.1225 0 0 93.7052 0 213.347V420H82.8367V221.713Z"
                className={props.className}

            />
            <circle cx="367" cy="382" r="43" className={props.className} />
        </svg>
    ),


    Avatar: (props: IconProps) => (
        <svg xmlns="http://www.w3.org/2000/svg"
            fill="none" viewBox="0 0 1080 1080"
            {...props}
        >
            <defs>
                <filter
                    id="filter"
                    width="140%"
                    height="140%"
                    x="-20%"
                    y="-20%"
                    colorInterpolationFilters="linearRGB"
                    filterUnits="objectBoundingBox"
                    primitiveUnits="userSpaceOnUse"

                >
                    <feMorphology
                        in="SourceAlpha"
                        operator="dilate"
                        radius="20 20"
                        result="morphology"
                    ></feMorphology>
                    <feFlood floodColor="#fff" floodOpacity="1" result="flood"></feFlood>
                    <feComposite
                        in="flood"
                        in2="morphology"
                        operator="in"
                        result="composite"
                    ></feComposite>
                    <feMerge result="merge">
                        <feMergeNode in="composite"></feMergeNode>
                        <feMergeNode in="SourceGraphic"></feMergeNode>
                    </feMerge>
                </filter>
            </defs>
            <g filter="url(#filter)">
                <g fill="#fff">
                    <g
                        fillRule="evenodd"
                        stroke="none"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth="1"
                    >
                        <path
                            stroke="#000"
                            strokeWidth="24"
                            d="M532 379c132.548 0 240 107.452 240 240s-7.452 280-180 280c-129.285 0-233.252-82.78-277.26-180.046-.908.03-1.822.046-2.74.046-44.183 0-80-35.817-80-80 0-39.865 29.159-72.92 67.312-79C325.6 455.98 419.81 379 532 379zM295.859 624.545l8.282 30.91"
                        ></path>
                    </g>
                </g>
                <g>
                    <g>
                        <path
                            fill="#000"
                            fillRule="evenodd"
                            stroke="#000"
                            strokeLinecap="round"
                            strokeLinejoin="round"
                            strokeWidth="6"
                            d="M648.516 601s15.706 2.637 23.484 8.977c13.06 10.645 21.906 31.279 20.774 43.603C690.065 683.076 644 684.359 644 684.359s56 5.13 56-30.779c0-16.358-10.567-34.515-28-44.885-8.078-4.806-23.484-7.695-23.484-7.695z"
                            clipRule="evenodd"
                        ></path>
                    </g>
                </g>
                <g>
                    <g
                        fill="none"
                        fillRule="evenodd"
                        stroke="none"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth="1"
                    >
                        <path
                            stroke="#000"
                            strokeWidth="16"
                            d="M549 759c27.33 6.667 50.664 10 70 10s36.003-3.333 50-10"
                        ></path>
                    </g>
                </g>
                <g>
                    <g fill="none" fillRule="evenodd" stroke="none" strokeWidth="1">
                        <g transform="translate(518 518.576)">
                            <circle cx="48.229" cy="20" r="20" fill="#000"></circle>
                            <path
                                stroke="#000"
                                strokeLinecap="round"
                                strokeLinejoin="round"
                                strokeWidth="12"
                                d="M0 22.424c16-13.333 32-20 48-20s32 6.667 48 20"
                            ></path>
                            <circle
                                cx="193.771"
                                cy="20"
                                r="20"
                                fill="#000"
                                transform="matrix(-1 0 0 1 387.543 0)"
                            ></circle>
                            <path
                                stroke="#000"
                                strokeLinecap="round"
                                strokeLinejoin="round"
                                strokeWidth="12"
                                d="M242 22.424c-16-13.333-32-20-48-20s-32 6.667-48 20"
                            ></path>
                        </g>
                    </g>
                </g>
                <g>
                    <g
                        fill="none"
                        fillRule="evenodd"
                        stroke="none"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth="1"
                    >
                        <path
                            fill="#000"
                            stroke="#000"
                            strokeWidth="16"
                            d="M570 485.718c20.574 3.078 35.574 9.247 45 18.508-15-5.608-30-8.412-45-8.412s-33.333 2.804-55 8.412l10-13.46c9.426-6.442 24.426-8.125 45-5.048zm138 0c20.574-3.077 35.574-1.394 45 5.048h0l10 13.46c-21.667-5.608-40-8.412-55-8.412s-30 2.804-45 8.412c9.426-9.261 24.426-15.43 45-18.508z"
                        ></path>
                    </g>
                </g>
                <g>
                    <g>
                        <g fill="#000">
                            <path
                                fillRule="evenodd"
                                d="M279.001 719l33 8 51 77-.989.138c-7.618 1.032-12.288.986-14.011-.138-12.891-8.414-20.334-22.765-32-35-14.105-14.793-26.438-31.46-37-50zm276-474c40.483 4.465 75.916 23.728 105.823 49.427l2.486.474c40.639 7.891 85.002 16.602 104.691 45.099 25.333 36.666 35.667 79.666 31 129-16.94-39.968-43-72-58.968-75.432 20.876 36.59 27.968 67.616 27.968 79.432 0 39-16.667 79.666-24 105 0-34.667-7.667-92.667-53-136-53.982-51.601-149.183-24-189-24-30.725 0-14.034 46.879-41.38 81.411C464.677 513 473.001 533 494.001 552c-32.44-.017-45.273-19.459-55.185-40.144l-3.329.554c-2.597.437-5.185.9-7.576 1.469 3.191 13.066 10.306 28.667 21.345 46.803-14.52-12.326-24.988-26.337-31.405-42.034a5.857 5.857 0 00-.85 1.352c-23.636 52.739-24 73-36 135h-15l-1.372-3.149C349.93 618.257 338.054 595.64 329.001 584l-.841-1.071C314.41 565.583 299.959 555.5 288.001 559l-.755.23-.535.173c-8.787 2.903-28.47 12.324-42.71 29.597-5.251 6.369-10.917 18.369-17 36l-.935-1.406-1.365-2.077c-12.694-19.446-19.594-33.952-20.7-43.517-3.882-33.558-8-144 28-195s47.907-44.467 76-51c24-80.667 109.201-102.199 247-87z"
                                clipRule="evenodd"
                            ></path>
                            <path d="M279.001 719l1.413-5.831a5.999 5.999 0 00-6.627 8.801l5.214-2.97zm33 8l5.002-3.313a5.999 5.999 0 00-3.589-2.518L312.001 727zm51 77l.828 5.942a5.997 5.997 0 004.174-9.255L363.001 804zm-.989.138l.806 5.945.022-.003-.828-5.942zM348.001 804l3.279-5.025-3.279 5.025zm-32-35l-4.343 4.14 4.343-4.14zm239-524l-.658 5.964.658-5.964zm105.823 49.427l-3.91 4.55a5.985 5.985 0 002.785 1.343l1.125-5.893zm2.486.474l1.143-5.89-.018-.003-1.125 5.893zM768.001 340l-4.937 3.41 4.937-3.41zm31 129l-5.524 2.341a5.998 5.998 0 0011.497-1.776l-5.973-.565zm-58.968-75.432l1.261-5.866a6 6 0 00-6.473 8.84l5.212-2.974zM744.001 578h-6a6 6 0 0011.763 1.668L744.001 578zm-53-136l-4.146 4.337 4.146-4.337zm-230.38 57.411l-4.703-3.725a5.997 5.997 0 00-1.046 5.441l5.749-1.716zM494.001 552l-.003 6a6 6 0 004.028-10.449L494.001 552zm-55.185-40.144l5.411-2.593a6.001 6.001 0 00-6.397-3.326l.986 5.919zm-3.329.554l-.986-5.918-.01.001.996 5.917zm-7.576 1.469l-1.39-5.837a5.998 5.998 0 00-4.439 7.26l5.829-1.423zm21.345 46.803l-3.883 4.574a5.999 5.999 0 009.008-7.693l-5.125 3.119zm-31.405-42.034l5.554-2.271a6.001 6.001 0 00-10.17-1.563l4.616 3.834zm-.85 1.352l-5.475-2.454 5.475 2.454zm-36 135v6a6.001 6.001 0 005.891-4.86l-5.891-1.14zm-15 0l-5.501 2.397a6.001 6.001 0 005.501 3.603v-6zm-1.372-3.149l5.5-2.396-.003-.009-5.497 2.405zM329.001 584l4.736-3.684-.017-.021-4.719 3.705zm-.841-1.071l4.719-3.706-.017-.021-4.702 3.727zM288.001 559l-1.685-5.759a1.593 1.593 0 01-.065.019l1.75 5.74zm-.755.23l-1.749-5.74-.097.031 1.846 5.709zm-.535.173l-1.846-5.709-.036.012 1.882 5.697zM244.001 589l-4.63-3.817 4.63 3.817zm-17 36l-4.997 3.322a6 6 0 0010.669-1.365L227.001 625zm-.935-1.406l-5.013 3.296a.233.233 0 00.017.026l4.996-3.322zm-1.365-2.077l-5.025 3.279.011.017 5.014-3.296zM204.001 578l5.96-.69-5.96.69zm104-246l1.359 5.844a6.001 6.001 0 004.392-4.133L308.001 332zm-30.414 392.831l33 8 2.827-11.662-33-8-2.827 11.662zm29.412 5.482l51 77 10.004-6.626-51-77-10.004 6.626zm55.174 67.744l-.988.138 1.655 11.885.989-.138-1.656-11.885zm-.967.135c-3.68.499-6.43.705-8.351.686-.96-.009-1.577-.075-1.929-.139-.418-.077-.156-.097.354.236l-6.559 10.049c1.373.896 2.864 1.303 4.044 1.519 1.247.228 2.596.321 3.972.334 2.749.027 6.143-.26 10.081-.794l-1.612-11.891zm-9.926.783c-5.611-3.662-10.207-8.727-15.051-14.788-4.682-5.857-9.812-12.957-15.886-19.328l-8.685 8.281c5.593 5.866 10.018 12.059 15.197 18.539 5.016 6.277 10.587 12.594 17.866 17.345l6.559-10.049zm-30.937-34.116c-13.753-14.424-25.798-30.694-36.129-48.829l-10.427 5.94c10.793 18.946 23.415 36.009 37.871 51.17l8.685-8.281zm234-513.895c38.95 4.296 73.29 22.853 102.571 48.013l7.821-9.101c-30.534-26.238-67.06-46.206-109.076-50.84l-1.316 11.928zm105.356 49.356l2.486.475 2.25-11.787-2.486-.475-2.25 11.787zm2.467.471c20.415 3.964 41.193 8.036 59.308 14.576 18.138 6.547 32.779 15.291 41.59 28.043l9.873-6.821c-10.878-15.744-28.262-25.605-47.388-32.509-19.148-6.913-40.872-11.142-61.096-15.069l-2.287 11.78zm100.898 42.619c24.44 35.374 34.513 76.929 29.964 125.025l11.946 1.13c4.784-50.571-5.81-95.016-32.037-132.976l-9.873 6.821zm41.461 123.248c-8.66-20.434-19.676-38.907-30.667-52.798-5.494-6.943-11.064-12.847-16.426-17.296-5.26-4.364-10.77-7.708-16.138-8.862l-2.522 11.733c2.615.561 6.351 2.509 10.998 6.364 4.545 3.772 9.542 9.017 14.677 15.507 10.266 12.974 20.751 30.501 29.03 50.035l11.048-4.683zm-69.704-70.116c20.575 36.061 27.18 66.047 27.18 76.458h12c0-13.22-7.579-45.286-28.757-82.405l-10.423 5.947zM762.001 473c0 18.707-4.006 38.019-9.029 56.011-2.506 8.977-5.244 17.554-7.834 25.526-2.572 7.918-5.032 15.341-6.901 21.794l11.527 3.337c1.799-6.213 4.172-13.374 6.787-21.424 2.598-7.997 5.402-16.774 7.979-26.006 5.144-18.424 9.471-38.945 9.471-59.238h-12zm-12 105c0-35.325-7.778-95.338-54.854-140.337l-8.292 8.674c43.59 41.667 51.146 97.655 51.146 131.663h12zm-54.854-140.337c-28.716-27.449-68.005-33.469-104.034-33.013-18.095.229-35.679 2.1-51.065 3.883C524.45 410.341 511.51 412 502.001 412v12c10.4 0 24.291-1.792 39.429-3.546 15.349-1.78 32.405-3.584 49.835-3.805 35.021-.444 70.324 5.536 95.59 29.688l8.292-8.674zM502.001 412c-4.614 0-8.722.884-12.295 2.784-3.59 1.909-6.282 4.653-8.329 7.828-3.907 6.055-5.71 14.135-7.225 22.01-3.184 16.541-5.669 35.196-18.234 51.064l9.407 7.45c14.78-18.665 17.622-40.715 20.61-56.246 1.571-8.162 3.065-13.96 5.525-17.773 1.136-1.76 2.395-2.948 3.88-3.738 1.502-.799 3.593-1.379 6.661-1.379v-12zm-47.129 89.127c4.265 14.288 13.054 35.373 35.103 55.322l8.051-8.898c-19.951-18.051-27.808-36.966-31.655-49.856l-11.499 3.432zM494.004 546c-14.869-.008-24.756-4.41-32.09-10.834-7.541-6.607-12.799-15.703-17.687-25.903l-10.822 5.186c5.025 10.486 11.139 21.453 20.602 29.743 9.671 8.472 22.42 13.799 39.991 13.808l.006-12zm-56.174-40.063l-3.329.555 1.972 11.837 3.329-.555-1.972-11.837zm-3.339.556c-2.612.44-5.369.93-7.97 1.549l2.78 11.674c2.182-.52 4.6-.954 7.182-1.389l-1.992-11.834zm-12.409 8.809c3.397 13.907 10.852 30.105 22.048 48.5l10.251-6.239c-10.881-17.877-17.656-32.882-20.641-45.108l-11.658 2.847zm31.057 40.806c-13.878-11.781-23.725-25.029-29.734-39.731l-11.108 4.541c6.824 16.693 17.914 31.467 33.076 44.338l7.766-9.148zm-39.904-41.294a11.883 11.883 0 00-1.709 2.732l10.95 4.908a.298.298 0 01-.023.044c-.004.007-.001.001.013-.016l-9.231-7.668zm-1.709 2.732c-23.992 53.534-24.483 74.661-36.416 136.314l11.782 2.28c12.067-62.348 12.305-81.743 35.584-133.686l-10.95-4.908zM381.001 649h-15v12h15v-12zm-9.5 3.603l-1.372-3.148-11.001 4.793 1.372 3.149 11.001-4.794zm-1.375-3.157c-14.69-33.574-26.823-56.83-36.389-69.13l-9.472 7.367c8.54 10.981 20.159 32.959 34.867 66.573l10.994-4.81zm-36.406-69.151l-.841-1.072-9.438 7.411.841 1.071 9.438-7.41zm-.858-1.093c-7.107-8.966-14.652-16.396-22.282-21.148-7.602-4.735-16.013-7.227-24.264-4.813l3.37 11.517c3.707-1.084 8.501-.285 14.551 3.482 6.023 3.752 12.578 10.035 19.221 18.416l9.404-7.454zm-46.611-25.942l-.754.23 3.499 11.479.754-.23-3.499-11.479zm-.851.261l-.535.173 3.693 11.418.535-.173-3.693-11.418zm-.571.185c-9.511 3.142-30.294 13.084-45.458 31.477l9.259 7.633c13.317-16.152 31.901-25.052 39.964-27.716l-3.765-11.394zm-45.458 31.477c-5.996 7.274-11.946 20.19-18.042 37.86l11.344 3.914c6.069-17.592 11.453-28.677 15.957-34.141l-9.259-7.633zm-7.374 36.495l-.934-1.406-9.993 6.644.934 1.406 9.993-6.644zm-.917-1.38l-1.366-2.077-10.027 6.592 1.366 2.077 10.027-6.592zm-1.355-2.061c-6.258-9.588-11.005-17.832-14.301-24.761-3.33-7-5.019-12.33-5.463-16.166l-11.92 1.379c.662 5.73 2.976 12.435 6.546 19.941 3.604 7.576 8.654 16.308 15.089 26.166l10.049-6.559zm-19.764-40.927c-1.901-16.433-3.886-52.044-.934-89.802 2.974-38.035 10.877-76.966 27.876-101.048l-9.804-6.92c-19.001 26.918-27.039 68.707-30.036 107.033-3.018 38.602-1.003 74.992.978 92.116l11.92-1.379zm26.942-190.85c17.853-25.293 29.133-35.406 38.771-40.281 4.799-2.428 9.444-3.685 14.816-4.738 5.131-1.006 11.784-1.949 18.87-3.597l-2.718-11.688c-6.961 1.619-12.332 2.308-18.459 3.509-5.887 1.153-11.736 2.675-17.925 5.806-12.339 6.241-25.013 18.361-43.159 44.069l9.804 6.92zm76.849-52.749c11.368-38.21 37.039-62.422 76.938-75.457 40.3-13.167 95.028-14.859 163.653-7.29l1.316-11.928c-69.175-7.63-125.947-6.155-168.696 7.811-43.151 14.098-72.081 40.985-84.713 83.442l11.502 3.422z"></path>
                        </g>
                    </g>
                </g>
            </g>
        </svg>
    )
    ,



}


function IconNextChat({
    className,
    inverted,
    ...props
}: React.ComponentProps<'svg'> & { inverted?: boolean }) {
    const id = React.useId()

    return (
        <svg
            viewBox="0 0 17 17"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            className={cn('size-4', className)}
            {...props}
        >
            <defs>
                <linearGradient
                    id={`gradient-${id}-1`}
                    x1="10.6889"
                    y1="10.3556"
                    x2="13.8445"
                    y2="14.2667"
                    gradientUnits="userSpaceOnUse"
                >
                    <stop stopColor={inverted ? 'white' : 'black'} />
                    <stop
                        offset={1}
                        stopColor={inverted ? 'white' : 'black'}
                        stopOpacity={0}
                    />
                </linearGradient>
                <linearGradient
                    id={`gradient-${id}-2`}
                    x1="11.7555"
                    y1="4.8"
                    x2="11.7376"
                    y2="9.50002"
                    gradientUnits="userSpaceOnUse"
                >
                    <stop stopColor={inverted ? 'white' : 'black'} />
                    <stop
                        offset={1}
                        stopColor={inverted ? 'white' : 'black'}
                        stopOpacity={0}
                    />
                </linearGradient>
            </defs>
            <path
                d="M1 16L2.58314 11.2506C1.83084 9.74642 1.63835 8.02363 2.04013 6.39052C2.4419 4.75741 3.41171 3.32057 4.776 2.33712C6.1403 1.35367 7.81003 0.887808 9.4864 1.02289C11.1628 1.15798 12.7364 1.8852 13.9256 3.07442C15.1148 4.26363 15.842 5.83723 15.9771 7.5136C16.1122 9.18997 15.6463 10.8597 14.6629 12.224C13.6794 13.5883 12.2426 14.5581 10.6095 14.9599C8.97637 15.3616 7.25358 15.1692 5.74942 14.4169L1 16Z"
                fill={inverted ? 'black' : 'white'}
                stroke={inverted ? 'black' : 'white'}
                strokeWidth={2}
                strokeLinecap="round"
                strokeLinejoin="round"
            />
            <mask
                id="mask0_91_2047"
                style={{ maskType: 'alpha' }}
                maskUnits="userSpaceOnUse"
                x={1}
                y={0}
                width={16}
                height={16}
            >
                <circle cx={9} cy={8} r={8} fill={inverted ? 'black' : 'white'} />
            </mask>
            <g mask="url(#mask0_91_2047)">
                <circle cx={9} cy={8} r={8} fill={inverted ? 'black' : 'white'} />
                <path
                    d="M14.2896 14.0018L7.146 4.8H5.80005V11.1973H6.87681V6.16743L13.4444 14.6529C13.7407 14.4545 14.0231 14.2369 14.2896 14.0018Z"
                    fill={`url(#gradient-${id}-1)`}
                />
                <rect
                    x="11.2222"
                    y="4.8"
                    width="1.06667"
                    height="6.4"
                    fill={`url(#gradient-${id}-2)`}
                />
            </g>
        </svg>
    )
}

function IconGemini({ className, ...props }: React.ComponentProps<'svg'>) {
    return (
        <svg
            fill="currentColor"
            viewBox="0 0 24 24"
            role="img"
            xmlns="http://www.w3.org/2000/svg"
            className={cn('size-4', className)}
            {...props}
        >
            <title>Gemini icon</title>
            <path d="M22.2819 9.8211a5.9847 5.9847 0 0 0-.5157-4.9108 6.0462 6.0462 0 0 0-6.5098-2.9A6.0651 6.0651 0 0 0 4.9807 4.1818a5.9847 5.9847 0 0 0-3.9977 2.9 6.0462 6.0462 0 0 0 .7427 7.0966 5.98 5.98 0 0 0 .511 4.9107 6.051 6.051 0 0 0 6.5146 2.9001A5.9847 5.9847 0 0 0 13.2599 24a6.0557 6.0557 0 0 0 5.7718-4.2058 5.9894 5.9894 0 0 0 3.9977-2.9001 6.0557 6.0557 0 0 0-.7475-7.0729zm-9.022 12.6081a4.4755 4.4755 0 0 1-2.8764-1.0408l.1419-.0804 4.7783-2.7582a.7948.7948 0 0 0 .3927-.6813v-6.7369l2.02 1.1686a.071.071 0 0 1 .038.052v5.5826a4.504 4.504 0 0 1-4.4945 4.4944zm-9.6607-4.1254a4.4708 4.4708 0 0 1-.5346-3.0137l.142.0852 4.783 2.7582a.7712.7712 0 0 0 .7806 0l5.8428-3.3685v2.3324a.0804.0804 0 0 1-.0332.0615L9.74 19.9502a4.4992 4.4992 0 0 1-6.1408-1.6464zM2.3408 7.8956a4.485 4.485 0 0 1 2.3655-1.9728V11.6a.7664.7664 0 0 0 .3879.6765l5.8144 3.3543-2.0201 1.1685a.0757.0757 0 0 1-.071 0l-4.8303-2.7865A4.504 4.504 0 0 1 2.3408 7.872zm16.5963 3.8558L13.1038 8.364 15.1192 7.2a.0757.0757 0 0 1 .071 0l4.8303 2.7913a4.4944 4.4944 0 0 1-.6765 8.1042v-5.6772a.79.79 0 0 0-.407-.667zm2.0107-3.0231l-.142-.0852-4.7735-2.7818a.7759.7759 0 0 0-.7854 0L9.409 9.2297V6.8974a.0662.0662 0 0 1 .0284-.0615l4.8303-2.7866a4.4992 4.4992 0 0 1 6.6802 4.66zM8.3065 12.863l-2.02-1.1638a.0804.0804 0 0 1-.038-.0567V6.0742a4.4992 4.4992 0 0 1 7.3757-3.4537l-.142.0805L8.704 5.459a.7948.7948 0 0 0-.3927.6813zm1.0976-2.3654l2.602-1.4998 2.6069 1.4998v2.9994l-2.5974 1.4997-2.6067-1.4997Z" />
        </svg>
    )
}

function IconVercel({ className, ...props }: React.ComponentProps<'svg'>) {
    return (
        <svg
            aria-label="Vercel logomark"
            role="img"
            viewBox="0 0 74 64"
            className={cn('size-4', className)}
            {...props}
        >
            <path
                d="M37.5896 0.25L74.5396 64.25H0.639648L37.5896 0.25Z"
                fill="currentColor"
            ></path>
        </svg>
    )
}

function IconGitHub({ className, ...props }: React.ComponentProps<'svg'>) {
    return (
        <svg
            role="img"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
            fill="currentColor"
            className={cn('size-4', className)}
            {...props}
        >
            <title>GitHub</title>
            <path d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12" />
        </svg>
    )
}

function IconSeparator({ className, ...props }: React.ComponentProps<'svg'>) {
    return (
        <svg
            fill="none"
            shapeRendering="geometricPrecision"
            stroke="currentColor"
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="1"
            viewBox="0 0 24 24"
            aria-hidden="true"
            className={cn('size-4', className)}
            {...props}
        >
            <path d="M16.88 3.549L7.12 20.451"></path>
        </svg>
    )
}

function IconArrowDown({ className, ...props }: React.ComponentProps<'svg'>) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 256 256"
            fill="currentColor"
            className={cn('size-4', className)}
            {...props}
        >
            <path d="m205.66 149.66-72 72a8 8 0 0 1-11.32 0l-72-72a8 8 0 0 1 11.32-11.32L120 196.69V40a8 8 0 0 1 16 0v156.69l58.34-58.35a8 8 0 0 1 11.32 11.32Z" />
        </svg>
    )
}

function IconArrowRight({ className, ...props }: React.ComponentProps<'svg'>) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 256 256"
            fill="currentColor"
            className={cn('size-4', className)}
            {...props}
        >
            <path d="m221.66 133.66-72 72a8 8 0 0 1-11.32-11.32L196.69 136H40a8 8 0 0 1 0-16h156.69l-58.35-58.34a8 8 0 0 1 11.32-11.32l72 72a8 8 0 0 1 0 11.32Z" />
        </svg>
    )
}

function IconUser({ className, ...props }: React.ComponentProps<'svg'>) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 256 256"
            fill="currentColor"
            className={cn('size-4', className)}
            {...props}
        >
            <path d="M230.92 212c-15.23-26.33-38.7-45.21-66.09-54.16a72 72 0 1 0-73.66 0c-27.39 8.94-50.86 27.82-66.09 54.16a8 8 0 1 0 13.85 8c18.84-32.56 52.14-52 89.07-52s70.23 19.44 89.07 52a8 8 0 1 0 13.85-8ZM72 96a56 56 0 1 1 56 56 56.06 56.06 0 0 1-56-56Z" />
        </svg>
    )
}

function IconPlus({ className, ...props }: React.ComponentProps<'svg'>) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 256 256"
            fill="currentColor"
            className={cn('size-4', className)}
            {...props}
        >
            <path d="M224 128a8 8 0 0 1-8 8h-80v80a8 8 0 0 1-16 0v-80H40a8 8 0 0 1 0-16h80V40a8 8 0 0 1 16 0v80h80a8 8 0 0 1 8 8Z" />
        </svg>
    )
}

function IconArrowElbow({ className, ...props }: React.ComponentProps<'svg'>) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 256 256"
            fill="currentColor"
            className={cn('size-4', className)}
            {...props}
        >
            <path d="M200 32v144a8 8 0 0 1-8 8H67.31l34.35 34.34a8 8 0 0 1-11.32 11.32l-48-48a8 8 0 0 1 0-11.32l48-48a8 8 0 0 1 11.32 11.32L67.31 168H184V32a8 8 0 0 1 16 0Z" />
        </svg>
    )
}

function IconSpinner({ className, ...props }: React.ComponentProps<'svg'>) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 256 256"
            fill="currentColor"
            className={cn('size-4 animate-spin', className)}
            {...props}
        >
            <path d="M232 128a104 104 0 0 1-208 0c0-41 23.81-78.36 60.66-95.27a8 8 0 0 1 6.68 14.54C60.15 61.59 40 93.27 40 128a88 88 0 0 0 176 0c0-34.73-20.15-66.41-51.34-80.73a8 8 0 0 1 6.68-14.54C208.19 49.64 232 87 232 128Z" />
        </svg>
    )
}

function IconMessage({ className, ...props }: React.ComponentProps<'svg'>) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 256 256"
            fill="currentColor"
            className={cn('size-4', className)}
            {...props}
        >
            <path d="M216 48H40a16 16 0 0 0-16 16v160a15.84 15.84 0 0 0 9.25 14.5A16.05 16.05 0 0 0 40 240a15.89 15.89 0 0 0 10.25-3.78.69.69 0 0 0 .13-.11L82.5 208H216a16 16 0 0 0 16-16V64a16 16 0 0 0-16-16ZM40 224Zm176-32H82.5a16 16 0 0 0-10.3 3.75l-.12.11L40 224V64h176Z" />
        </svg>
    )
}

function IconTrash({ className, ...props }: React.ComponentProps<'svg'>) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 256 256"
            fill="currentColor"
            className={cn('size-4', className)}
            {...props}
        >
            <path d="M216 48h-40v-8a24 24 0 0 0-24-24h-48a24 24 0 0 0-24 24v8H40a8 8 0 0 0 0 16h8v144a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16V64h8a8 8 0 0 0 0-16ZM96 40a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v8H96Zm96 168H64V64h128Zm-80-104v64a8 8 0 0 1-16 0v-64a8 8 0 0 1 16 0Zm48 0v64a8 8 0 0 1-16 0v-64a8 8 0 0 1 16 0Z" />
        </svg>
    )
}

function IconRefresh({ className, ...props }: React.ComponentProps<'svg'>) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 256 256"
            fill="currentColor"
            className={cn('size-4', className)}
            {...props}
        >
            <path d="M197.67 186.37a8 8 0 0 1 0 11.29C196.58 198.73 170.82 224 128 224c-37.39 0-64.53-22.4-80-39.85V208a8 8 0 0 1-16 0v-48a8 8 0 0 1 8-8h48a8 8 0 0 1 0 16H55.44C67.76 183.35 93 208 128 208c36 0 58.14-21.46 58.36-21.68a8 8 0 0 1 11.31.05ZM216 40a8 8 0 0 0-8 8v23.85C192.53 54.4 165.39 32 128 32c-42.82 0-68.58 25.27-69.66 26.34a8 8 0 0 0 11.3 11.34C69.86 69.46 92 48 128 48c35 0 60.24 24.65 72.56 40H168a8 8 0 0 0 0 16h48a8 8 0 0 0 8-8V48a8 8 0 0 0-8-8Z" />
        </svg>
    )
}

function IconStop({ className, ...props }: React.ComponentProps<'svg'>) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 256 256"
            fill="currentColor"
            className={cn('size-4', className)}
            {...props}
        >
            <path d="M128 24a104 104 0 1 0 104 104A104.11 104.11 0 0 0 128 24Zm0 192a88 88 0 1 1 88-88 88.1 88.1 0 0 1-88 88Zm24-120h-48a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8v-48a8 8 0 0 0-8-8Zm-8 48h-32v-32h32Z" />
        </svg>
    )
}

function IconSidebar({ className, ...props }: React.ComponentProps<'svg'>) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 256 256"
            fill="currentColor"
            className={cn('size-4', className)}
            {...props}
        >
            <path d="M216 40H40a16 16 0 0 0-16 16v144a16 16 0 0 0 16 16h176a16 16 0 0 0 16-16V56a16 16 0 0 0-16-16ZM40 56h40v144H40Zm176 144H96V56h120v144Z" />
        </svg>
    )
}

function IconMoon({ className, ...props }: React.ComponentProps<'svg'>) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 256 256"
            fill="currentColor"
            className={cn('size-4', className)}
            {...props}
        >
            <path d="M233.54 142.23a8 8 0 0 0-8-2 88.08 88.08 0 0 1-109.8-109.8 8 8 0 0 0-10-10 104.84 104.84 0 0 0-52.91 37A104 104 0 0 0 136 224a103.09 103.09 0 0 0 62.52-20.88 104.84 104.84 0 0 0 37-52.91 8 8 0 0 0-1.98-7.98Zm-44.64 48.11A88 88 0 0 1 65.66 67.11a89 89 0 0 1 31.4-26A106 106 0 0 0 96 56a104.11 104.11 0 0 0 104 104 106 106 0 0 0 14.92-1.06 89 89 0 0 1-26.02 31.4Z" />
        </svg>
    )
}

function IconSun({ className, ...props }: React.ComponentProps<'svg'>) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 256 256"
            fill="currentColor"
            className={cn('size-4', className)}
            {...props}
        >
            <path d="M120 40V16a8 8 0 0 1 16 0v24a8 8 0 0 1-16 0Zm72 88a64 64 0 1 1-64-64 64.07 64.07 0 0 1 64 64Zm-16 0a48 48 0 1 0-48 48 48.05 48.05 0 0 0 48-48ZM58.34 69.66a8 8 0 0 0 11.32-11.32l-16-16a8 8 0 0 0-11.32 11.32Zm0 116.68-16 16a8 8 0 0 0 11.32 11.32l16-16a8 8 0 0 0-11.32-11.32ZM192 72a8 8 0 0 0 5.66-2.34l16-16a8 8 0 0 0-11.32-11.32l-16 16A8 8 0 0 0 192 72Zm5.66 114.34a8 8 0 0 0-11.32 11.32l16 16a8 8 0 0 0 11.32-11.32ZM48 128a8 8 0 0 0-8-8H16a8 8 0 0 0 0 16h24a8 8 0 0 0 8-8Zm80 80a8 8 0 0 0-8 8v24a8 8 0 0 0 16 0v-24a8 8 0 0 0-8-8Zm112-88h-24a8 8 0 0 0 0 16h24a8 8 0 0 0 0-16Z" />
        </svg>
    )
}

function IconCopy({ className, ...props }: React.ComponentProps<'svg'>) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 256 256"
            fill="currentColor"
            className={cn('size-4', className)}
            {...props}
        >
            <path d="M216 32H88a8 8 0 0 0-8 8v40H40a8 8 0 0 0-8 8v128a8 8 0 0 0 8 8h128a8 8 0 0 0 8-8v-40h40a8 8 0 0 0 8-8V40a8 8 0 0 0-8-8Zm-56 176H48V96h112Zm48-48h-32V88a8 8 0 0 0-8-8H96V48h112Z" />
        </svg>
    )
}

function IconCheck({ className, ...props }: React.ComponentProps<'svg'>) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 256 256"
            fill="currentColor"
            className={cn('size-4', className)}
            {...props}
        >
            <path d="m229.66 77.66-128 128a8 8 0 0 1-11.32 0l-56-56a8 8 0 0 1 11.32-11.32L96 188.69 218.34 66.34a8 8 0 0 1 11.32 11.32Z" />
        </svg>
    )
}

function IconDownload({ className, ...props }: React.ComponentProps<'svg'>) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 256 256"
            fill="currentColor"
            className={cn('size-4', className)}
            {...props}
        >
            <path d="M224 152v56a16 16 0 0 1-16 16H48a16 16 0 0 1-16-16v-56a8 8 0 0 1 16 0v56h160v-56a8 8 0 0 1 16 0Zm-101.66 5.66a8 8 0 0 0 11.32 0l40-40a8 8 0 0 0-11.32-11.32L136 132.69V40a8 8 0 0 0-16 0v92.69l-26.34-26.35a8 8 0 0 0-11.32 11.32Z" />
        </svg>
    )
}

function IconClose({ className, ...props }: React.ComponentProps<'svg'>) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 256 256"
            fill="currentColor"
            className={cn('size-4', className)}
            {...props}
        >
            <path d="M205.66 194.34a8 8 0 0 1-11.32 11.32L128 139.31l-66.34 66.35a8 8 0 0 1-11.32-11.32L116.69 128 50.34 61.66a8 8 0 0 1 11.32-11.32L128 116.69l66.34-66.35a8 8 0 0 1 11.32 11.32L139.31 128Z" />
        </svg>
    )
}

function IconEdit({ className, ...props }: React.ComponentProps<'svg'>) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            strokeWidth={1.5}
            stroke="currentColor"
            className={cn('size-4', className)}
            {...props}
        >
            <path
                strokeLinecap="round"
                strokeLinejoin="round"
                d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10"
            />
        </svg>
    )
}

function IconShare({ className, ...props }: React.ComponentProps<'svg'>) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="currentColor"
            className={cn('size-4', className)}
            viewBox="0 0 256 256"
            {...props}
        >
            <path d="m237.66 106.35-80-80A8 8 0 0 0 144 32v40.35c-25.94 2.22-54.59 14.92-78.16 34.91-28.38 24.08-46.05 55.11-49.76 87.37a12 12 0 0 0 20.68 9.58c11-11.71 50.14-48.74 107.24-52V192a8 8 0 0 0 13.66 5.65l80-80a8 8 0 0 0 0-11.3ZM160 172.69V144a8 8 0 0 0-8-8c-28.08 0-55.43 7.33-81.29 21.8a196.17 196.17 0 0 0-36.57 26.52c5.8-23.84 20.42-46.51 42.05-64.86C99.41 99.77 127.75 88 152 88a8 8 0 0 0 8-8V51.32L220.69 112Z" />
        </svg>
    )
}

function IconUsers({ className, ...props }: React.ComponentProps<'svg'>) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="currentColor"
            className={cn('size-4', className)}
            viewBox="0 0 256 256"
            {...props}
        >
            <path d="M117.25 157.92a60 60 0 1 0-66.5 0 95.83 95.83 0 0 0-47.22 37.71 8 8 0 1 0 13.4 8.74 80 80 0 0 1 134.14 0 8 8 0 0 0 13.4-8.74 95.83 95.83 0 0 0-47.22-37.71ZM40 108a44 44 0 1 1 44 44 44.05 44.05 0 0 1-44-44Zm210.14 98.7a8 8 0 0 1-11.07-2.33A79.83 79.83 0 0 0 172 168a8 8 0 0 1 0-16 44 44 0 1 0-16.34-84.87 8 8 0 1 1-5.94-14.85 60 60 0 0 1 55.53 105.64 95.83 95.83 0 0 1 47.22 37.71 8 8 0 0 1-2.33 11.07Z" />
        </svg>
    )
}

function IconExternalLink({
    className,
    ...props
}: React.ComponentProps<'svg'>) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="currentColor"
            className={cn('size-4', className)}
            viewBox="0 0 256 256"
            {...props}
        >
            <path d="M224 104a8 8 0 0 1-16 0V59.32l-66.33 66.34a8 8 0 0 1-11.32-11.32L196.68 48H152a8 8 0 0 1 0-16h64a8 8 0 0 1 8 8Zm-40 24a8 8 0 0 0-8 8v72H48V80h72a8 8 0 0 0 0-16H48a16 16 0 0 0-16 16v128a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-72a8 8 0 0 0-8-8Z" />
        </svg>
    )
}

function IconChevronUpDown({
    className,
    ...props
}: React.ComponentProps<'svg'>) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="currentColor"
            className={cn('size-4', className)}
            viewBox="0 0 256 256"
            {...props}
        >
            <path d="M181.66 170.34a8 8 0 0 1 0 11.32l-48 48a8 8 0 0 1-11.32 0l-48-48a8 8 0 0 1 11.32-11.32L128 212.69l42.34-42.35a8 8 0 0 1 11.32 0Zm-96-84.68L128 43.31l42.34 42.35a8 8 0 0 0 11.32-11.32l-48-48a8 8 0 0 0-11.32 0l-48 48a8 8 0 0 0 11.32 11.32Z" />
        </svg>
    )
}

export const GoogleIcon = () => {
    return (
        <svg
            height="14"
            strokeLinejoin="round"
            viewBox="0 0 16 16"
            width="14"
            style={{ color: 'currentcolor' }}
        >
            <path
                d="M8.15991 6.54543V9.64362H12.4654C12.2763 10.64 11.709 11.4837 10.8581 12.0509L13.4544 14.0655C14.9671 12.6692 15.8399 10.6182 15.8399 8.18188C15.8399 7.61461 15.789 7.06911 15.6944 6.54552L8.15991 6.54543Z"
                fill="#4285F4"
            ></path>
            <path
                d="M3.6764 9.52268L3.09083 9.97093L1.01807 11.5855C2.33443 14.1963 5.03241 16 8.15966 16C10.3196 16 12.1305 15.2873 13.4542 14.0655L10.8578 12.0509C10.1451 12.5309 9.23598 12.8219 8.15966 12.8219C6.07967 12.8219 4.31245 11.4182 3.67967 9.5273L3.6764 9.52268Z"
                fill="#34A853"
            ></path>
            <path
                d="M1.01803 4.41455C0.472607 5.49087 0.159912 6.70543 0.159912 7.99995C0.159912 9.29447 0.472607 10.509 1.01803 11.5854C1.01803 11.5926 3.6799 9.51991 3.6799 9.51991C3.5199 9.03991 3.42532 8.53085 3.42532 7.99987C3.42532 7.46889 3.5199 6.95983 3.6799 6.47983L1.01803 4.41455Z"
                fill="#FBBC05"
            ></path>
            <path
                d="M8.15982 3.18545C9.33802 3.18545 10.3853 3.59271 11.2216 4.37818L13.5125 2.0873C12.1234 0.792777 10.3199 0 8.15982 0C5.03257 0 2.33443 1.79636 1.01807 4.41455L3.67985 6.48001C4.31254 4.58908 6.07983 3.18545 8.15982 3.18545Z"
                fill="#EA4335"
            ></path>
        </svg>
    )
}

export const ArrowUpRight = () => {
    return (
        <svg
            data-testid="geist-icon"
            height="12"
            strokeLinejoin="round"
            viewBox="0 0 16 16"
            width="12"
            style={{ color: 'currentcolor' }}
        >
            <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M5.75001 2H5.00001V3.5H5.75001H11.4393L2.21968 12.7197L1.68935 13.25L2.75001 14.3107L3.28034 13.7803L12.4988 4.56182V10.25V11H13.9988V10.25V3C13.9988 2.44772 13.5511 2 12.9988 2H5.75001Z"
                fill="currentColor"
            ></path>
        </svg>
    )
}

export const ArrowDownRight = () => {
    return (
        <svg
            data-testid="geist-icon"
            height="12"
            strokeLinejoin="round"
            viewBox="0 0 16 16"
            width="12"
            style={{ color: 'currentcolor' }}
        >
            <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M12.4994 11.4399V5.74999V4.99999H13.9994V5.74999V12.9994C13.9994 13.5517 13.5517 13.9994 12.9994 13.9994H5.74999H4.99999V12.4994H5.74999H11.4376L2.21908 3.28092L1.68875 2.75059L2.74941 1.68993L3.27974 2.22026L12.4994 11.4399Z"
                fill="currentColor"
            ></path>
        </svg>
    )
}

export const SparklesIcon = () => {
    return (
        <svg
            data-testid="geist-icon"
            height="14"
            strokeLinejoin="round"
            viewBox="0 0 16 16"
            width="14"
            style={{ color: 'currentcolor' }}
        >
            <path
                d="M2.5 0.5V0H3.5V0.5C3.5 1.60457 4.39543 2.5 5.5 2.5H6V3V3.5H5.5C4.39543 3.5 3.5 4.39543 3.5 5.5V6H3H2.5V5.5C2.5 4.39543 1.60457 3.5 0.5 3.5H0V3V2.5H0.5C1.60457 2.5 2.5 1.60457 2.5 0.5Z"
                fill="currentColor"
            ></path>
            <path
                d="M14.5 4.5V5H13.5V4.5C13.5 3.94772 13.0523 3.5 12.5 3.5H12V3V2.5H12.5C13.0523 2.5 13.5 2.05228 13.5 1.5V1H14H14.5V1.5C14.5 2.05228 14.9477 2.5 15.5 2.5H16V3V3.5H15.5C14.9477 3.5 14.5 3.94772 14.5 4.5Z"
                fill="currentColor"
            ></path>
            <path
                d="M8.40706 4.92939L8.5 4H9.5L9.59294 4.92939C9.82973 7.29734 11.7027 9.17027 14.0706 9.40706L15 9.5V10.5L14.0706 10.5929C11.7027 10.8297 9.82973 12.7027 9.59294 15.0706L9.5 16H8.5L8.40706 15.0706C8.17027 12.7027 6.29734 10.8297 3.92939 10.5929L3 10.5V9.5L3.92939 9.40706C6.29734 9.17027 8.17027 7.29734 8.40706 4.92939Z"
                fill="currentColor"
            ></path>
        </svg>
    )
}

export const LockIcon = () => {
    return (
        <svg
            data-testid="geist-icon"
            height="16"
            strokeLinejoin="round"
            viewBox="0 0 16 16"
            width="16"
            style={{ color: 'currentcolor' }}
        >
            <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M9.5 6V7H6.5V6C6.5 5.17157 7.17157 4.5 8 4.5C8.82843 4.5 9.5 5.17157 9.5 6ZM5 7V6C5 4.34315 6.34315 3 8 3C9.65685 3 11 4.34315 11 6V7H12V11.5C12 12.3284 11.3284 13 10.5 13H5.5C4.67157 13 4 12.3284 4 11.5V7H5Z"
                fill="currentColor"
            ></path>
        </svg>
    )
}

export const CheckIcon = () => {
    return (
        <svg
            data-testid="geist-icon"
            height="28"
            strokeLinejoin="round"
            viewBox="0 0 16 16"
            width="28"
            style={{ color: 'currentcolor' }}
        >
            <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM11.5303 6.53033L12.0607 6L11 4.93934L10.4697 5.46967L6.5 9.43934L5.53033 8.46967L5 7.93934L3.93934 9L4.46967 9.53033L5.96967 11.0303C6.26256 11.3232 6.73744 11.3232 7.03033 11.0303L11.5303 6.53033Z"
                fill="currentColor"
            ></path>
        </svg>
    )
}

export const CardIcon = () => {
    return (
        <svg
            data-testid="geist-icon"
            height="16"
            strokeLinejoin="round"
            viewBox="0 0 16 16"
            width="16"
            style={{ color: 'currentcolor' }}
        >
            <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M14 3H2C1.72386 3 1.5 3.22386 1.5 3.5V5L14.5 5V3.5C14.5 3.22386 14.2761 3 14 3ZM1.5 12.5V6.5L14.5 6.5V12.5C14.5 12.7761 14.2761 13 14 13H2C1.72386 13 1.5 12.7761 1.5 12.5ZM2 1.5C0.895431 1.5 0 2.39543 0 3.5V12.5C0 13.6046 0.895431 14.5 2 14.5H14C15.1046 14.5 16 13.6046 16 12.5V3.5C16 2.39543 15.1046 1.5 14 1.5H2ZM4 10.75C4.41421 10.75 4.75 10.4142 4.75 10C4.75 9.58579 4.41421 9.25 4 9.25C3.58579 9.25 3.25 9.58579 3.25 10C3.25 10.4142 3.58579 10.75 4 10.75Z"
                fill="currentColor"
            ></path>
        </svg>
    )
}

export const SpinnerIcon = () => {
    return (
        <svg
            fill="none"
            stroke="currentColor"
            strokeWidth="1.5"
            viewBox="0 0 24 24"
            strokeLinecap="round"
            strokeLinejoin="round"
            xmlns="http://www.w3.org/2000/svg"
            className="size-5 animate-spin stroke-zinc-400"
        >
            <path d="M12 3v3m6.366-.366-2.12 2.12M21 12h-3m.366 6.366-2.12-2.12M12 21v-3m-6.366.366 2.12-2.12M3 12h3m-.366-6.366 2.12 2.12"></path>
        </svg>
    )
}

export const DeviceIcon = () => {
    return (
        <svg
            data-testid="geist-icon"
            height="14"
            strokeLinejoin="round"
            viewBox="0 0 16 16"
            width="14"
            style={{ color: 'currentcolor' }}
        >
            <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M1 3.25C1 1.45507 2.45507 0 4.25 0H11.75C13.5449 0 15 1.45507 15 3.25V15.25V16H14.25H1.75H1V15.25V3.25ZM4.25 1.5C3.2835 1.5 2.5 2.2835 2.5 3.25V14.5H13.5V3.25C13.5 2.2835 12.7165 1.5 11.75 1.5H4.25ZM4 4C4 3.44772 4.44772 3 5 3H11C11.5523 3 12 3.44772 12 4V10H4V4ZM9 13H12V11.5H9V13Z"
                fill="currentColor"
            ></path>
        </svg>
    )
}

export const GooglePayIcon = () => {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            version="1.1"
            id="G_Pay_Acceptance_Mark"
            x="0px"
            y="0px"
            viewBox="0 0 1094 742"
            enable-background="new 0 0 1094 742"
        >
            <path
                id="Base_1_"
                fill="#FFFFFF"
                d="M722.7,170h-352c-110,0-200,90-200,200l0,0c0,110,90,200,200,200h352c110,0,200-90,200-200l0,0  C922.7,260,832.7,170,722.7,170z"
            />
            <path
                id="Outline"
                fill="#3C4043"
                d="M722.7,186.2c24.7,0,48.7,4.9,71.3,14.5c21.9,9.3,41.5,22.6,58.5,39.5  c16.9,16.9,30.2,36.6,39.5,58.5c9.6,22.6,14.5,46.6,14.5,71.3s-4.9,48.7-14.5,71.3c-9.3,21.9-22.6,41.5-39.5,58.5  c-16.9,16.9-36.6,30.2-58.5,39.5c-22.6,9.6-46.6,14.5-71.3,14.5h-352c-24.7,0-48.7-4.9-71.3-14.5c-21.9-9.3-41.5-22.6-58.5-39.5  c-16.9-16.9-30.2-36.6-39.5-58.5c-9.6-22.6-14.5-46.6-14.5-71.3s4.9-48.7,14.5-71.3c9.3-21.9,22.6-41.5,39.5-58.5  c16.9-16.9,36.6-30.2,58.5-39.5c22.6-9.6,46.6-14.5,71.3-14.5L722.7,186.2 M722.7,170h-352c-110,0-200,90-200,200l0,0  c0,110,90,200,200,200h352c110,0,200-90,200-200l0,0C922.7,260,832.7,170,722.7,170L722.7,170z"
            />
            <g id="G_Pay_Lockup_1_">
                <g id="Pay_Typeface_3_">
                    <path
                        id="Letter_p_3_"
                        fill="#3C4043"
                        d="M529.3,384.2v60.5h-19.2V295.3H561c12.9,0,23.9,4.3,32.9,12.9    c9.2,8.6,13.8,19.1,13.8,31.5c0,12.7-4.6,23.2-13.8,31.7c-8.9,8.5-19.9,12.7-32.9,12.7h-31.7V384.2z M529.3,313.7v52.1h32.1    c7.6,0,14-2.6,19-7.7c5.1-5.1,7.7-11.3,7.7-18.3c0-6.9-2.6-13-7.7-18.1c-5-5.3-11.3-7.9-19-7.9h-32.1V313.7z"
                    />
                    <path
                        id="Letter_a_3_"
                        fill="#3C4043"
                        d="M657.9,339.1c14.2,0,25.4,3.8,33.6,11.4c8.2,7.6,12.3,18,12.3,31.2v63h-18.3v-14.2h-0.8    c-7.9,11.7-18.5,17.5-31.7,17.5c-11.3,0-20.7-3.3-28.3-10s-11.4-15-11.4-25c0-10.6,4-19,12-25.2c8-6.3,18.7-9.4,32-9.4    c11.4,0,20.8,2.1,28.1,6.3v-4.4c0-6.7-2.6-12.3-7.9-17c-5.3-4.7-11.5-7-18.6-7c-10.7,0-19.2,4.5-25.4,13.6l-16.9-10.6    C625.9,345.8,639.7,339.1,657.9,339.1z M633.1,413.3c0,5,2.1,9.2,6.4,12.5c4.2,3.3,9.2,5,14.9,5c8.1,0,15.3-3,21.6-9    s9.5-13,9.5-21.1c-6-4.7-14.3-7.1-25-7.1c-7.8,0-14.3,1.9-19.5,5.6C635.7,403.1,633.1,407.8,633.1,413.3z"
                    />
                    <path
                        id="Letter_y_3_"
                        fill="#3C4043"
                        d="M808.2,342.4l-64,147.2h-19.8l23.8-51.5L706,342.4h20.9l30.4,73.4h0.4l29.6-73.4H808.2z"
                    />
                </g>
                <g id="G_Mark_1_">
                    <path
                        id="Blue_500"
                        fill="#4285F4"
                        d="M452.93,372c0-6.26-0.56-12.25-1.6-18.01h-80.48v33L417.2,387    c-1.88,10.98-7.93,20.34-17.2,26.58v21.41h27.59C443.7,420.08,452.93,398.04,452.93,372z"
                    />
                    <path
                        id="Green_500_1_"
                        fill="#34A853"
                        d="M400.01,413.58c-7.68,5.18-17.57,8.21-29.14,8.21c-22.35,0-41.31-15.06-48.1-35.36    h-28.46v22.08c14.1,27.98,43.08,47.18,76.56,47.18c23.14,0,42.58-7.61,56.73-20.71L400.01,413.58z"
                    />
                    <path
                        id="Yellow_500_1_"
                        fill="#FABB05"
                        d="M320.09,370.05c0-5.7,0.95-11.21,2.68-16.39v-22.08h-28.46    c-5.83,11.57-9.11,24.63-9.11,38.47s3.29,26.9,9.11,38.47l28.46-22.08C321.04,381.26,320.09,375.75,320.09,370.05z"
                    />
                    <path
                        id="Red_500"
                        fill="#E94235"
                        d="M370.87,318.3c12.63,0,23.94,4.35,32.87,12.85l24.45-24.43    c-14.85-13.83-34.21-22.32-57.32-22.32c-33.47,0-62.46,19.2-76.56,47.18l28.46,22.08C329.56,333.36,348.52,318.3,370.87,318.3z"
                    />
                </g>
            </g>
        </svg>
    )
}

export {
    IconEdit,
    IconNextChat,
    IconGemini,
    IconVercel,
    IconGitHub,
    IconSeparator,
    IconArrowDown,
    IconArrowRight,
    IconUser,
    IconPlus,
    IconArrowElbow,
    IconSpinner,
    IconMessage,
    IconTrash,
    IconRefresh,
    IconStop,
    IconSidebar,
    IconMoon,
    IconSun,
    IconCopy,
    IconCheck,
    IconDownload,
    IconClose,
    IconShare,
    IconUsers,
    IconExternalLink,
    IconChevronUpDown
}
